using System;
using System.Collections;
using System.Collections.Generic;
using AutoFixture;
using QWERTY.Shared.Db.Entities.Таблицы;
using QWERTY.Shared.Models;
using QWERTY.Shared.Models._Создатель;
using QWERTY.Shared.Models.Заявки.Заявка_на_предоставление_доступа_к_защищаемым_ресурсам;
using QWERTY.Shared.Models.Заявки.Заявка_на_создание_защищаемого_ресурса;
using QWERTY.Shared.Models.Заявки.Заявка_на_создание_профиля_доступа_на_ресурс;
using NUnit.Framework;

namespace QWERTY.Shared2.Tests.Tests.Core.Models.Модульные_Тесты._Создатель
{
    [TestFixture]
    public class Создатель__Тесты : InitModule
    {
        [SetUp]
        public void Инициализация()
        {
        }
        
        [Test]
        public void СоздаемВалидныеМодели__ПроходятУспешноВалидацию()
        {
            foreach (var модель in ДанныеИзФормы_ВалидныеМодели())
            {
                Assert.IsInstanceOf<ДанныеИзФормы>(модель);
                Assert.IsNotNull(модель);
                Assert.IsTrue(модель?.Валидна());
            }

            IEnumerable<ДанныеИзФормы?> ДанныеИзФормы_ВалидныеМодели()
            {
                yield return ПолучитьВалиднуюМодель_ДанныеИзФормы_Fixture<ДанныеИзФормы>();
                
                yield return ПолучитьВалиднуюМодель_ДанныеИзФормы_Fixture
                    <ДанныеИзФормы_ПредоставлениеДоступаСубъектам_модель>();
                
                yield return ПолучитьВалиднуюМодель_ДанныеИзФормы_Fixture
                    <ДанныеИзФормы_СозданиеЗащищаемогоРесурса_модель>();
                
                yield return ПолучитьВалиднуюМодель_ДанныеИзФормы_Fixture
                    <ДанныеИзФормы_СозданиеПрофиляДоступа_модель>();
            }
        }
        

        [Test]
        public void КонструкторСоздатель_1_модель_ДанныеИзФормы_БезПараметров__НеКидаетИсключение()
        {
            Assert.Throws<NotImplementedException>(() => new Создатель<ДанныеИзФормы> ());
        }
        
        
        [Test]
        public void КонструкторСоздатель_2_модель_ДанныеИзФормы_Валидная__НеКидаетИсключение()
        {
            Assert.DoesNotThrow(() => new Создатель<ДанныеИзФормы> (
                _commonService,
                log
            ));
        }
        
        
        [Test]
        public void КонструкторСоздатель_3_модель_ДанныеИзФормы_РодительскаяЗаявка_Отсутствует_Валидная__НеКидаетИсключение()
        {
            Assert.DoesNotThrow(() => new Создатель<ДанныеИзФормы> (
                _commonService,
                log,
                (REQUEST?) null
            ));
        }

        [Test]
        public void КонструкторСоздатель_3_модель_ДанныеИзФормы_РодительскаяЗаявка_Есть_Валидная__НеКидаетИсключение()
        {
            Assert.DoesNotThrow(() => new Создатель<ДанныеИзФормы> (
                _commonService,
                log,
                РодительскаяЗаявка
            ));
        }
        
        [Test]
        public void КонструкторСоздатель_4_модель_ДанныеИзФормы_Валидная__НеКидаетИсключение()
        {
            Assert.DoesNotThrow(() => new Создатель<ДанныеИзФормы> (
                _commonService,
                log,
                ЛогинПользователяСервиса.name,
                РодительскаяЗаявка
            ));
        }

        [Test]
        public void КонструкторСоздатель_5_модель_ДанныеИзФормы_Валидная__НеКидаетИсключение()
        {
            Assert.DoesNotThrow(() => ПолучитьВалиднуюМодель_Создатель_ДанныеИзФормы_N5(
                ПолучитьВалиднуюМодель_ДанныеИзФормы_Fixture<ДанныеИзФормы>(),
                РодительскаяЗаявка
            ));
        }
        
        
        [Test]
        public void КонструкторСоздатель_N5__класс_ДанныеИзФормы__модель_ДанныеИзФормы_ПредоставлениеПравСубъектам__Валидная__НеКидаетИсключение()
        {
            Assert.DoesNotThrow(() => ПолучитьВалиднуюМодель_Создатель_ДанныеИзФормы_N5(
                ПолучитьВалиднуюМодель_ДанныеИзФормы_Fixture<ДанныеИзФормы_ПредоставлениеДоступаСубъектам_модель>(),
                РодительскаяЗаявка
            ));
        }
        
        
        [Test]
        public void КонструкторСоздатель_N5__класс_ДанныеИзФормы_модель__модель_ДанныеИзФормы_СозданиеЗащищаемогоРесурса__Валидная__НеКидаетИсключение()
        {
            Assert.DoesNotThrow(() => ПолучитьВалиднуюМодель_Создатель_ДанныеИзФормы_N5(
                ПолучитьВалиднуюМодель_ДанныеИзФормы_Fixture<ДанныеИзФормы_СозданиеЗащищаемогоРесурса_модель>(),
                РодительскаяЗаявка
            ));
        }
        
        
        [Test]
        public void КонструкторСоздатель_N5__класс_ДанныеИзФормы_модель__модель_данныеИзФормыСозданиеПрофиляДоступаМодель__Валидная__НеКидаетИсключение()
        {
            Assert.DoesNotThrow(() => ПолучитьВалиднуюМодель_Создатель_ДанныеИзФормы_N5(
                ПолучитьВалиднуюМодель_ДанныеИзФормы_Fixture<ДанныеИзФормы_СозданиеПрофиляДоступа_модель>(),
                РодительскаяЗаявка
            ));
        }
    }
}