import {
  АЛЕРТНУТЬ_ДАННЫЕ_ФОРМЫ_ВОССТАНОВЛЕНЫ,
  ПОЛУЧИТЬ_ФОРМУ_ИЗ_ХРАНИЛИЩА_БРАУЗЕРА,
  СОХРАНИТЬ_ФОРМУ_ВО_ХРАНИЛИЩЕ_БРАУЗЕРА,
} from '@/store/action-types'

import { ОбъектФормы } from '@/views/СоздатьЗаявку/СоздатьПрофиль_СИЛС_ЗЛИВС/js/объектыФормы'
import { имяФормы } from '../const'

export default {
  methods: {
    saveContent () {
      // bug: сохранение сложного объекта подглючивает, не копирует массивы внутри объектов,
      // bug: точнее то копирует, то не копирует, то копирует частично
      this.$store.dispatch(
        СОХРАНИТЬ_ФОРМУ_ВО_ХРАНИЛИЩЕ_БРАУЗЕРА,
        {
          key: имяФормы,
          value: JSON.parse(JSON.stringify(this.v)), // переводим сложный объект в строку и обратно в объект, долго, но надежно
          // ранее использовал _.cloneDeep(this.v),
          // но он отрабатывает неверно, если у меня есть массив объектов,
          // которые содержат массив, в этом случае массив не копировался
        })
    },

    clearContent () {
      this.stopWatching = true
      this.v = new ОбъектФормы()
      this.stopWatching = false
    },

    async loadContent () {
      // ставим флаг, что идёт восстановление формы
      this.stopWatching = true
      const v = await this.$store.dispatch(
        ПОЛУЧИТЬ_ФОРМУ_ИЗ_ХРАНИЛИЩА_БРАУЗЕРА,
        имяФормы,
      )

      if (v === null) { return }

      // сохраняем полученный объект, используется для отладки
      this.i = v
      // клонируем полученный объект
      this.v = JSON.parse(JSON.stringify(v))
      await this.$store.dispatch(АЛЕРТНУТЬ_ДАННЫЕ_ФОРМЫ_ВОССТАНОВЛЕНЫ)
      // ставим флаг, что восстановление формы завершено
      this.stopWatching = false
    },
  },
}
