/*
/!* eslint-disable *!/
// СОЗДАТЬ ИЛИ ПОЛУЧИТЬ - глагол в верхнем регистре

// Что будем получать или создавать - существительное
// действующиеРесурсы

// --------------------------------------------------------------------------------------------------------------
// getter-types.js
// --------------------------------------------------------------------------------------------------------------
import * as getterTypes from './getter-types'
export const получитьДействующиеРесурсы = 'получитьДействующиеРесурсы'

// --------------------------------------------------------------------------------------------------------------
// mutation-types.js
// --------------------------------------------------------------------------------------------------------------
import * as mutationTypes from './mutation-types'
export const СОХРАНИТЬ_ДЕЙСТВУЮЩИЕ_РЕСУРСЫ = 'СОХРАНИТЬ_ДЕЙСТВУЮЩИЕ_РЕСУРСЫ'

// --------------------------------------------------------------------------------------------------------------
// actions-types.js
// --------------------------------------------------------------------------------------------------------------
import * as actionTypes from './action-types'
export const СОЗДАТЬ_ДЕЙСТВУЮЩИЕ_РЕСУРСЫ_НА_СЕРВЕРЕ = 'СОЗДАТЬ_ДЕЙСТВУЮЩИЕ_РЕСУРСЫ_НА_СЕРВЕРЕ'
export const ПОЛУЧИТЬ_ДЕЙСТВУЮЩИЕ_РЕСУРСЫ_С_СЕРВЕРА = 'ПОЛУЧИТЬ_ДЕЙСТВУЮЩИЕ_РЕСУРСЫ_С_СЕРВЕРА'

// --------------------------------------------------------------------------------------------------------------
// URL-TYPES
// --------------------------------------------------------------------------------------------------------------
import * as urlTypes from './url-types'
export const СОЗДАТЬ_ДЕЙСТВУЮЩИЕ_РЕСУРСЫ_НА_СЕРВЕРЕ = '/RequestAjax/GetResources'
export const ПОЛУЧИТЬ_ДЕЙСТВУЮЩИЕ_РЕСУРСЫ_С_СЕРВЕРА = '/RequestAjax/GetResources'

// --------------------------------------------------------------------------------------------------------------
// PARAM-TYPES
// --------------------------------------------------------------------------------------------------------------
import * as urlTypes from './params-types'
export class ПАРАМЕТРЫ_ЗАПРОСА_ДЕЙСТВУЮЩИЕ_РЕСУРСЫ {
  /!**
   * @param {Number} serviceTypeId Тип сервиса
   * @param {Number} objectTypeId Тип объекта ресурса
   * @return {Object} returnObject
   *!/
  constructor (serviceTypeId, objectTypeId) {
    this.serviceTypeId = serviceTypeId
    this.objectTypeId = objectTypeId
  }

  /!**
   * Ответ запроса: список объектов
   * @returns {[Object]}
   * @param {Number} id ид ресурса
   * @param {String} name имя ресурса
   *!/
  returnObject = (id, name) => null
}

// --------------------------------------------------------------------------------------------------------------
// STORE.JS
// --------------------------------------------------------------------------------------------------------------

// state
действующиеРесурсы: [],

// getter
[getterTypes.получитьДействующиеРесурсы]: state => state.действующиеРесурсы,

// mutation
[mutationTypes.СОХРАНИТЬ_ДЕЙСТВУЮЩИЕ_РЕСУРСЫ] (state, value) {
  state.действующиеРесурсы = value
},

// GET
[actionTypes.ПОЛУЧИТЬ_ДЕЙСТВУЮЩИЕ_РЕСУРСЫ_С_СЕРВЕРА] ({ dispatch }, модель) {
  return dispatch(
    actionTypes.ВЫПОЛНИТЬ_ЗАПРОС_GET,
    new GetPayloadYesParam(
      urlTypes.ПОЛУЧИТЬ_ДЕЙСТВУЮЩИЕ_РЕСУРСЫ_С_СЕРВЕРА,
      модель,
      mutationTypes.СОХРАНИТЬ_ДЕЙСТВУЮЩИЕ_РЕСУРСЫ,
      actionTypes.ПОЛУЧИТЬ_ДЕЙСТВУЮЩИЕ_РЕСУРСЫ_С_СЕРВЕРА,
    ))
},

// POST
[actionTypes.СОЗДАТЬ_ДЕЙСТВУЮЩИЕ_РЕСУРСЫ_НА_СЕРВЕРЕ] ({ dispatch }, модель) {
  return dispatch(
    actionTypes.ВЫПОЛНИТЬ_ЗАПРОС_POST,
    new PostPayload(
      urlTypes.СОЗДАТЬ_ДЕЙСТВУЮЩИЕ_РЕСУРСЫ_НА_СЕРВЕРЕ,
      модель,
      actionTypes.СОЗДАТЬ_ДЕЙСТВУЮЩИЕ_РЕСУРСЫ_НА_СЕРВЕРЕ,
    ))
},

// --------------------------------------------------------------------------------------------------------------
// ДЛЯ КОМПОНЕНТА
// --------------------------------------------------------------------------------------------------------------
<script>
  import { mapActions, mapGetters, mapMutations } from 'vuex'

  import {
    получитьДействующиеРесурсы
  } from '../../store/getter-types'

  import {
    СОЗДАТЬ_ДЕЙСТВУЮЩИЕ_РЕСУРСЫ_НА_СЕРВЕРЕ
    ПОЛУЧИТЬ_ДЕЙСТВУЮЩИЕ_РЕСУРСЫ_С_СЕРВЕРА
  } from '../../store/action-types'

  import { СОХРАНИТЬ_ДЕЙСТВУЮЩИЕ_РЕСУРСЫ } from '../../store/mutation-types'
  import { ПАРАМЕТРЫ_ЗАПРОСА_ДЕЙСТВУЮЩИЕ_РЕСУРСЫ } from '../../store/params-types'

  export default {

    data: () => ({
      выбранныйДействующиеРесурсы: null,
    }),

    computed: {
      ...mapGetters([
        получитьДействующиеРесурсы,
      ]),
    },

    methods: {
      СоздатьРесурс () {
        this.$store.dispatch(
            СОЗДАТЬ_ДЕЙСТВУЮЩИЕ_РЕСУРСЫ_НА_СЕРВЕРЕ
            ПОЛУЧИТЬ_ДЕЙСТВУЮЩИЕ_РЕСУРСЫ_С_СЕРВЕРА,
          new ПАРАМЕТРЫ_ЗАПРОСА_ДЕЙСТВУЮЩИЕ_РЕСУРСЫ(
          ))
      },

      ...mapActions([
        СОЗДАТЬ_ДЕЙСТВУЮЩИЕ_РЕСУРСЫ_НА_СЕРВЕРЕ
        ПОЛУЧИТЬ_ДЕЙСТВУЮЩИЕ_РЕСУРСЫ_С_СЕРВЕРА,
      ]),

      ...mapMutations([
        СОХРАНИТЬ_ДЕЙСТВУЮЩИЕ_РЕСУРСЫ
      ]),
    },
  }
</script>
*/
