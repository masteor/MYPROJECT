/*
// СОЗДАТЬ ИЛИ ПОЛУЧИТЬ - глагол в верхнем регистре

// Что будем получать или создавать - существительное
// например: действующие профили // каждое слово писать через пробел
// Перечень ресурсов, к которым предоставлен доступ субъектам
переченьРесурсовККоторымПредоставленДоступСубъектам

// --------------------------------------------------------------------------------------------------------------
// getter-types.js
// --------------------------------------------------------------------------------------------------------------
import * as getterTypes from './getter-types'

<@LABEL:GETTER@>
export const получитьПереченьРесурсовККоторымПредоставленДоступСубъектам = 'получитьПереченьРесурсовККоторымПредоставленДоступСубъектам'
</@LABEL:GETTER@>
// --------------------------------------------------------------------------------------------------------------
// mutation-types.js
// --------------------------------------------------------------------------------------------------------------
import * as mutationTypes from './mutation-types'
<@LABEL:MUTATION@>
export const СОХРАНИТЬ_ПЕРЕЧЕНЬ_РЕСУРСОВ_К_КОТОРЫМ_ПРЕДОСТАВЛЕН_ДОСТУП_СУБЪЕКТАМ = 'СОХРАНИТЬ_ПЕРЕЧЕНЬ_РЕСУРСОВ_К_КОТОРЫМ_ПРЕДОСТАВЛЕН_ДОСТУП_СУБЪЕКТАМ'
</@LABEL:MUTATION@>
// --------------------------------------------------------------------------------------------------------------
// actions-types.js
// --------------------------------------------------------------------------------------------------------------
import * as actionTypes from './action-types'

// СОХРАНИТЬ В ХРАНИЛИЩЕ (ЗАПУСТИТЬ МУТАЦИЮ) - отчеты
<@LABEL:ACTION-COMMIT-REPORTS@>
export const ПОЛУЧИТЬ_ПЕРЕЧЕНЬ_РЕСУРСОВ_К_КОТОРЫМ_ПРЕДОСТАВЛЕН_ДОСТУП_СУБЪЕКТАМ_С_СЕРВЕРА = 'ПОЛУЧИТЬ_ПЕРЕЧЕНЬ_РЕСУРСОВ_К_КОТОРЫМ_ПРЕДОСТАВЛЕН_ДОСТУП_СУБЪЕКТАМ_С_СЕРВЕРА'
</@LABEL:ACTION-COMMIT-REPORTS@>

// --------------------------------------------------------------------------------------------------------------
// URL-TYPES
// --------------------------------------------------------------------------------------------------------------
import * as urlTypes from './url-types'

// отчеты
<@LABEL:URL.GET-REPORTS@>
export const ПОЛУЧИТЬ_ПЕРЕЧЕНЬ_РЕСУРСОВ_К_КОТОРЫМ_ПРЕДОСТАВЛЕН_ДОСТУП_СУБЪЕКТАМ_С_СЕРВЕРА = '/ReportAjax/AllResourcesWithMembers'
</@LABEL:URL.GET-REPORTS@>

// --------------------------------------------------------------------------------------------------------------
// Header-types | для отчетов
// --------------------------------------------------------------------------------------------------------------
import * as urlTypes from './header-types'

<@LABEL:HEADER@>
export class ПЕРЕЧЕНЬ_РЕСУРСОВ_К_КОТОРЫМ_ПРЕДОСТАВЛЕН_ДОСТУП_СУБЪЕКТАМ {
  constructor () {
    return [
      {
        text: 'id',
        align: 'start',
        value: 'id',
      },
      {
        text: '',
        value: '',
      },
    ]
  }
}
</@LABEL:HEADER@>

// --------------------------------------------------------------------------------------------------------------
// constants/route-paths.js
// --------------------------------------------------------------------------------------------------------------
// AllResourcesWithMembers
// routePathConstName: AllResourcesWithMembers // пример: AcAccess
// routePathConstName2: all-resources-with-members
// viewsSubFolder: Reports // ex: Reports

export const AllResourcesWithMembers  = {
  route: {
    path: 'all-resources-with-members',
    name: pathNames.AllResourcesWithMembers,
    components: {
      mainContent: () => import('../src/views/Reports/AllResourcesWithMembers'),
    },
  },
  menuItem: {
    title: titles.переченьРесурсовККоторымПредоставленДоступСубъектам,
    to: { name: pathNames.AllResourcesWithMembers },
  },
}

// --------------------------------------------------------------------------------------------------------------
// constants/path-names.js
// --------------------------------------------------------------------------------------------------------------
export const AllResourcesWithMembers = 'AllResourcesWithMembers'

// --------------------------------------------------------------------------------------------------------------
// constants/titles.js
// --------------------------------------------------------------------------------------------------------------
// пример: export const переченьРесурсовВАс = 'Перечень ресурсов в АС'
export const переченьРесурсовККоторымПредоставленДоступСубъектам = 'Перечень ресурсов, к которым предоставлен доступ субъектам'

// --------------------------------------------------------------------------------------------------------------
// STORE.JS
// --------------------------------------------------------------------------------------------------------------

// state
// отчёты
<@LABEL:STORE.STATE-REPORTS@>
переченьРесурсовККоторымПредоставленДоступСубъектам: [],
</@LABEL:STORE.STATE-REPORTS@>

// getter
// отчёты
<@LABEL:STORE.GETTERS-REPORTS@>
[getterTypes.получитьПереченьРесурсовККоторымПредоставленДоступСубъектам]: state => state.переченьРесурсовККоторымПредоставленДоступСубъектам,
</@LABEL:STORE.GETTERS-REPORTS@>

// mutation
// отчёты
<@LABEL:STORE.MUTATION-REPORTS@>
[mutationTypes.СОХРАНИТЬ_ПЕРЕЧЕНЬ_РЕСУРСОВ_К_КОТОРЫМ_ПРЕДОСТАВЛЕН_ДОСТУП_СУБЪЕКТАМ] (state, value) {
  state.переченьРесурсовККоторымПредоставленДоступСубъектам = value
},
</@LABEL:STORE.MUTATION-REPORTS@>

// Действия
// сохранить
//отчёты
<@LABEL:STORE.ACTIONS-COMMIT-REPORTS@>
[actionTypes.СОХРАНИТЬ_ПЕРЕЧЕНЬ_РЕСУРСОВ_К_КОТОРЫМ_ПРЕДОСТАВЛЕН_ДОСТУП_СУБЪЕКТАМ] ({ commit }, value) {
  commit(mutationTypes.СОХРАНИТЬ_ПЕРЕЧЕНЬ_РЕСУРСОВ_К_КОТОРЫМ_ПРЕДОСТАВЛЕН_ДОСТУП_СУБЪЕКТАМ, value)
},
</@LABEL:STORE.ACTIONS-COMMIT-REPORTS@>

// GET
// модель, наДату, null: наДату - надо ввести слово,
// для отчётов
<@LABEL:STORE.ACTIONS-GET-REPORTS@>
/!**
 * @function dispatch
 * @param {Object.<ПАРАМЕТРЫ_ЗАПРОСА_НА_ДАТУПЕРЕЧЕНЬ_РЕСУРСОВ_К_КОТОРЫМ_ПРЕДОСТАВЛЕН_ДОСТУП_СУБЪЕКТАМ>} модель
 * @returns {Promise, Array<ПЕРЕЧЕНЬ_РЕСУРСОВ_К_КОТОРЫМ_ПРЕДОСТАВЛЕН_ДОСТУП_СУБЪЕКТАМ>}
 *!/
[actionTypes.ПОЛУЧИТЬ_ПЕРЕЧЕНЬ_РЕСУРСОВ_К_КОТОРЫМ_ПРЕДОСТАВЛЕН_ДОСТУП_СУБЪЕКТАМ_С_СЕРВЕРА] ({ dispatch }, наДату) {
  return dispatch(
    actionTypes.ВЫПОЛНИТЬ_ЗАПРОС_GET,
    new GetPayloadYesParam(
      urlTypes.ПОЛУЧИТЬ_ПЕРЕЧЕНЬ_РЕСУРСОВ_К_КОТОРЫМ_ПРЕДОСТАВЛЕН_ДОСТУП_СУБЪЕКТАМ_С_СЕРВЕРА,
      наДату,
      mutationTypes.СОХРАНИТЬ_ПЕРЕЧЕНЬ_РЕСУРСОВ_К_КОТОРЫМ_ПРЕДОСТАВЛЕН_ДОСТУП_СУБЪЕКТАМ,
      actionTypes.ПОЛУЧИТЬ_ПЕРЕЧЕНЬ_РЕСУРСОВ_К_КОТОРЫМ_ПРЕДОСТАВЛЕН_ДОСТУП_СУБЪЕКТАМ_С_СЕРВЕРА,
    ))
},
</@LABEL:STORE.ACTIONS-GET-REPORTS@>

// --------------------------------------------------------------------------------------------------------------
// ДЛЯ КОМПОНЕНТА
// --------------------------------------------------------------------------------------------------------------
<script>
  import { mapActions, mapGetters, mapMutations } from 'vuex'

  import {
    получитьПереченьРесурсовККоторымПредоставленДоступСубъектам
  } from '../../store/getter-types'

  import {
    СОЗДАТЬ_ПЕРЕЧЕНЬ_РЕСУРСОВ_К_КОТОРЫМ_ПРЕДОСТАВЛЕН_ДОСТУП_СУБЪЕКТАМ_НА_СЕРВЕРЕ
    ПОЛУЧИТЬ_ПЕРЕЧЕНЬ_РЕСУРСОВ_К_КОТОРЫМ_ПРЕДОСТАВЛЕН_ДОСТУП_СУБЪЕКТАМ_С_СЕРВЕРА
  } from '../../store/action-types'

  import { СОХРАНИТЬ_ПЕРЕЧЕНЬ_РЕСУРСОВ_К_КОТОРЫМ_ПРЕДОСТАВЛЕН_ДОСТУП_СУБЪЕКТАМ } from '../../store/mutation-types'
  import { ПАРАМЕТРЫ_ЗАПРОСА_ПЕРЕЧЕНЬ_РЕСУРСОВ_К_КОТОРЫМ_ПРЕДОСТАВЛЕН_ДОСТУП_СУБЪЕКТАМ } from '../../store/params-types'

  // для отчётов
  import { переченьРесурсовККоторымПредоставленДоступСубъектам } from '../../constants/titles'
  import { ПЕРЕЧЕНЬ_РЕСУРСОВ_К_КОТОРЫМ_ПРЕДОСТАВЛЕН_ДОСТУП_СУБЪЕКТАМ as Header } from '../../store/headers-types'
  import { ПАРАМЕТРЫ_ЗАПРОСА_НА_ДАТУ } from '../../store/params-types'

  export default {

    data: () => ({
      выбранныйПереченьРесурсовККоторымПредоставленДоступСубъектам: null,
    }),
    // для отчётов
    data: () => ({
      title: переченьРесурсовККоторымПредоставленДоступСубъектам,
      headers: [],
      строкаПоиска: '',
      date: new Date().toISOString().substr(0, 10),
    }),

    computed: {
      ...mapGetters([
        получитьПереченьРесурсовККоторымПредоставленДоступСубъектам,
      ]),
    },

    methods: {
      // для отчетов
      save (date) {
        this.$refs.menu.save(date)
      },
      // для форм
      СоздатьРесурс () {
        this.$store.dispatch(
            СОЗДАТЬ_ПЕРЕЧЕНЬ_РЕСУРСОВ_К_КОТОРЫМ_ПРЕДОСТАВЛЕН_ДОСТУП_СУБЪЕКТАМ_НА_СЕРВЕРЕ
            ПОЛУЧИТЬ_ПЕРЕЧЕНЬ_РЕСУРСОВ_К_КОТОРЫМ_ПРЕДОСТАВЛЕН_ДОСТУП_СУБЪЕКТАМ_С_СЕРВЕРА,
          new ПАРАМЕТРЫ_ЗАПРОСА_ПЕРЕЧЕНЬ_РЕСУРСОВ_К_КОТОРЫМ_ПРЕДОСТАВЛЕН_ДОСТУП_СУБЪЕКТАМ(
          ))
      },

      ...mapActions([
        СОЗДАТЬ_ПЕРЕЧЕНЬ_РЕСУРСОВ_К_КОТОРЫМ_ПРЕДОСТАВЛЕН_ДОСТУП_СУБЪЕКТАМ_НА_СЕРВЕРЕ
        ПОЛУЧИТЬ_ПЕРЕЧЕНЬ_РЕСУРСОВ_К_КОТОРЫМ_ПРЕДОСТАВЛЕН_ДОСТУП_СУБЪЕКТАМ_С_СЕРВЕРА,
      ]),

      ...mapMutations([
        СОХРАНИТЬ_ПЕРЕЧЕНЬ_РЕСУРСОВ_К_КОТОРЫМ_ПРЕДОСТАВЛЕН_ДОСТУП_СУБЪЕКТАМ
      ]),
    },

    // для отчётов
    created () {
      this.headers = new Header()
      this.ПОЛУЧИТЬ_ПЕРЕЧЕНЬ_РЕСУРСОВ_К_КОТОРЫМ_ПРЕДОСТАВЛЕН_ДОСТУП_СУБЪЕКТАМ_С_СЕРВЕРА(
        new ПАРАМЕТРЫ_ЗАПРОСА_НА_ДАТУ('2019-07-07'),
      )
    },
  }
</script>
*/
